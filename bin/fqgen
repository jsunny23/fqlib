#!/usr/bin/env python3
# pylint: disable=C0103

import sys
import argparse
import fqlib.rand
from fqlib.fqwriter import FastQWriter

if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description="Generate FastQ files that emulate Illumina-generated FastQ files." \
        "Note that the files generated by this tool only *emulate* FastQ files - the " \
        "reads will not align to any genome. They are completely random."
    )
    parser.add_argument(
        "-p",
        "--prefix",
        type=str,
        help="Prefix to be used when generating FastQ files. The read filenames " \
        "will be <PREFIX>_R1.fastq and <PREFIX>_R2.fastq respectively."
    )
    parser.add_argument(
        "-x",
        "--read-one-filename",
        type=str,
        help="FastQ file containing all R1 reads."
    )
    parser.add_argument(
        "-y",
        "--read-two-filename",
        type=str,
        help="FastQ file containing all R2 reads."
    )
    parser.add_argument(
        "-n",
        "--num-reads",
        help="Number of reads to generate",
        type=int,
        default=100000
    )

    args = parser.parse_args()

    # Validate args
    provided_prefix = args.prefix is not None
    provided_filenames = args.read_one_filename is not None and \
                         args.read_two_filename is not None
    if not provided_prefix and not provided_filenames:
        parser.error(
            "Must specify output files by prefix [-p] or by filenames [-x and -y]!"
        )

    if provided_prefix and provided_filenames:
        parser.error(
            "Cannot specify output files by both prefix [-p] and filenames [-x and -y]!"
        )

    read_one_filename = None
    read_two_filename = None
    if provided_prefix:
        read_one_filename = args.prefix + "_R1.fastq"
        read_two_filename = args.prefix + "_R2.fastq"
    elif provided_filenames:
        read_one_filename = args.read_one_filename
        read_two_filename = args.read_two_filename
    else:
        raise RuntimeError(
            "Unknown error, should only provide prefix or filenames."
        )

    # Begin program
    fqlib.rand.seed()
    writer = FastQWriter(read_one_filename, read_two_filename)
    writer.generate(args.num_reads)
